[agent]
interval = "20s"
round_interval = true
metric_batch_size = 1000
metric_buffer_limit = 10000
collection_jitter = "0s"
flush_interval = "10s"
flush_jitter = "0s"
precision = ""
debug = true
quiet = false
hostname = ""
omit_hostname = true

#############################################################
#                   OUTPUT PLUGINS                          #
#############################################################
[[outputs.influxdb]]
urls = [ "http://influxdb:8086" ]

database = "NIMBLE"

skip_database_creation = false

###############################################################
#                   PROCESSOR PLUGINS                         #
###############################################################

[[processors.regex]]

[[processors.regex.tags]]

# use the `topic` tag to extract information from the MQTT Topic
key = "topic"
# Topic: <Company>/<Site>/<Country>/<City>/<SENSOR_ID>/<measurement>
# Extract <Company>
pattern = "(.*)/.*/.*/.*/.*/.*"
# Replace the first occurrence
replacement = "${1}"
# Store it in tag called:
result_key = "company"

[[processors.regex.tags]]

key = "topic"
# Extract <Site>
pattern = ".*/(.*)/.*/.*/.*/.*"
replacement = "${1}"
result_key = "site"

[[processors.regex.tags]]

key = "topic"
# Extract: <Country>
pattern = ".*/.*/(.*)/.*/.*/.*"
replacement = "${1}"
result_key = "country"

[[processors.regex.tags]]

key = "topic"
# Extract: <City>
pattern = ".*/.*/.*/(.*)/.*/.*"
replacement = "${1}"
result_key = "city"

[[processors.regex.tags]]

key = "topic"
# Extract: <SENSOR_ID>
pattern = ".*/.*/.*/.*/(.*)/.*"
replacement = "${1}"
result_key = "sID"

[[processors.enum]]

[[processors.enum.mapping]]

# create a mapping between extracted sensorID and some meta-data
tag = "sID"
dest = "bizLocation"

[processors.enum.mapping.value_mappings]
# <<<<< INSERT MAPPINGS HERE >>>>>>
# "MAC_ADDRESS" = "EPC_BizLocation"
"AA:11:22:33:DD:FF" = "urn:id:loc:sgln:COMPANY_1"
"AA:11:22:33:DE:11" = "urn:id:loc:sgln:COMPANY_2"
"AA:11:22:34:AC:FB" = "urn:id:loc:sgln:COMPANY_3"

##################################################################
#                   INPUT PLUGINS                                #
##################################################################

[[inputs.mqtt_consumer]]

servers = [ "tcp://mosquitto:1883" ]

# Topics to subscribe to:
# NOTE:
# Subscribe to the top level MQTT Topic: <Company>/#
topics = [
  "company/#"
]

# Telegraf will also store the topic as a tag with name `topic`
# NOTE: necessary for the Processor REGEX to extract <Sensor_ID>
topic_tag = "topic"

# Connection timeout
connection_timeout = "30s"

# Incoming MQTT Payload from Sensor nodes is in InfluxDB Line Protocol strings
data_format = "influx"
